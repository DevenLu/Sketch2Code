// (ctrl shift p)

@import "./common.js"
@import "./logger.js"
@import "./runtime.js"
@import "./io.js"
@import "./render-core.js"

if([selection count] == 0)
{
   custom_log("No selection found")
   return
}

var target = selection[0]

if (![target isKindOfClass:[MSLayerGroup class]])
{
   custom_log("Not a group")
   return
}

custom_log("Target:" + target)

var baseDir = get_dir_from_prompt()
var webView = [WebView new]

custom_log("baseDir:" + baseDir)

var classMapping = loadObjectMap()
var viewDescriptors = loadSnippet("Common")

var targetSnippetName = mappedClassNameForLayer(target) || "UIView"
var targetTemplates = loadSnippet(targetSnippetName)

custom_log("Assembling snippet")

var interfaceContent = interfaceCode(targetTemplates)
var implementationContent = implementationCode(targetTemplates)

custom_log("Replacing template tags")

var generatedNamesCache = [NSMutableDictionary new];
var layersToSave = [NSMutableArray new];
var templateParts = templateBinding(target);

interfaceContent = templateCodeWithDictionary(interfaceContent, templateParts)
implementationContent = templateCodeWithDictionary(implementationContent, templateParts)

custom_log("Writing files")

writeTextToFile(baseDir + "/" + [target name] + ".h", interfaceContent)
writeTextToFile(baseDir + "/" + [target name] + ".m", implementationContent)

custom_log("Writing files [Done]")

function get_dir_from_prompt(){
    var panel = [NSOpenPanel openPanel];
    [panel setMessage:"Where do you want to place your assets?"];
    [panel setCanChooseDirectories: true];
    [panel setCanChooseFiles: false];
    [panel setCanCreateDirectories:true];
    var default_dir = [[doc fileURL] URLByDeletingLastPathComponent];
    [panel setDirectoryURL:default_dir];
    if ([panel runModal] == NSOKButton){
      var message = [panel filename];
      return message;
    }
}
